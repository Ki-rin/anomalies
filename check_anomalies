import pandas as pd
import openai

# Load the dataset
df = pd.read_csv('corporate_loans.csv')

# Set up your OpenAI API key
openai.api_key = 'your-api-key'

# Define a function to interact with the OpenAI API
def get_llm_response(prompt):
    response = openai.Completion.create(
      engine="text-davinci-003",
      prompt=prompt,
      max_tokens=150,
      n=1,
      stop=None,
      temperature=0.5,
    )
    return response.choices[0].text.strip()

# Define a function to check for anomalies using LLM
def check_anomalies_in_window(window, window_start_index):
    window_data = window.to_string(index=False)
    prompt = (f"Identify any anomalies or inconsistencies in the following corporate loan data rows:\n\n"
              f"{window_data}\n\n"
              "If there are anomalies, respond with the row number(s) that have anomalies relative to this list (starting from 0); otherwise, respond 'No anomalies'.")
    response = get_llm_response(prompt)
    if 'No anomalies' in response:
        return []
    try:
        # Extract row indices from the response
        anomaly_indices = [int(num) for num in response.split() if num.isdigit()]
        # Adjust the indices to the original DataFrame
        original_indices = [window_start_index + idx for idx in anomaly_indices if 0 <= idx < len(window)]
        return original_indices
    except Exception as e:
        print(f"Error processing response: {response}\nException: {e}")
        return []

# Define the sliding window function
def sliding_window_anomaly_detection(df, window_size=5):
    anomalies = []
    for start in range(len(df) - window_size + 1):
        window = df.iloc[start:start + window_size]
        window_start_index = window.index[0]
        response_indices = check_anomalies_in_window(window, window_start_index)
        anomalies.extend(response_indices)
    return anomalies

# Run the sliding window anomaly detection
window_size = 5  # Adjust window size as needed
anomalies_indices = sliding_window_anomaly_detection(df, window_size=window_size)

# Remove duplicates
anomalies_indices = list(set(anomalies_indices))

# Extract the anomalous rows
anomalous_rows = df.loc[anomalies_indices]
print("Anomalous Rows detected by LLM:\n", anomalous_rows)

# Save the anomalous rows to a CSV file
anomalous_rows.to_csv('anomalous_rows_report.csv', index=False)
